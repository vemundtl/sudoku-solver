{"ast":null,"code":"// Sudoku Generator and Solver for node.js\n// Copyright (c) 2011 Blagovest Dachev.  All rights reserved.\n//\n// This is a port of David Bau's python  implementation:\n// http://davidbau.com/archives/2006/09/04/sudoku_generator.html\nfunction makepuzzle(board) {\n  var puzzle = [];\n  var deduced = Array(81).fill(null);\n  var order = [...Array(81).keys()];\n  shuffleArray(order);\n\n  for (var i = 0; i < order.length; i++) {\n    var pos = order[i];\n\n    if (deduced[pos] === null) {\n      puzzle.push({\n        pos: pos,\n        num: board[pos]\n      });\n      deduced[pos] = board[pos];\n      deduce(deduced);\n    }\n  }\n\n  shuffleArray(puzzle);\n\n  for (var i = puzzle.length - 1; i >= 0; i--) {\n    var e = puzzle[i];\n    removeElement(puzzle, i);\n    var rating = checkpuzzle(boardforentries(puzzle), board);\n\n    if (rating === -1) {\n      puzzle.push(e);\n    }\n  }\n\n  return boardforentries(puzzle);\n}\n\nfunction ratepuzzle(puzzle, samples) {\n  var total = 0;\n\n  for (var i = 0; i < samples; i++) {\n    var tuple = solveboard(puzzle);\n\n    if (tuple.answer === null) {\n      return -1;\n    }\n\n    total += tuple.state.length;\n  }\n\n  return total / samples;\n}\n\nfunction checkpuzzle(puzzle, board) {\n  if (board === undefined) {\n    board = null;\n  }\n\n  var tuple1 = solveboard(puzzle);\n\n  if (tuple1.answer === null) {\n    return -1;\n  }\n\n  if (board != null && !boardmatches(board, tuple1.answer)) {\n    return -1;\n  }\n\n  var difficulty = tuple1.state.length;\n  var tuple2 = solvenext(tuple1.state);\n\n  if (tuple2.answer != null) {\n    return -1;\n  }\n\n  return difficulty;\n}\n\nfunction solvepuzzle(board) {\n  return solveboard(board).answer;\n}\n\nfunction solveboard(original) {\n  var board = [].concat(original);\n  var guesses = deduce(board);\n\n  if (guesses === null) {\n    return {\n      state: [],\n      answer: board\n    };\n  }\n\n  var track = [{\n    guesses: guesses,\n    count: 0,\n    board: board\n  }];\n  return solvenext(track);\n}\n\nfunction solvenext(remembered) {\n  while (remembered.length > 0) {\n    var tuple1 = remembered.pop();\n\n    if (tuple1.count >= tuple1.guesses.length) {\n      continue;\n    }\n\n    remembered.push({\n      guesses: tuple1.guesses,\n      count: tuple1.count + 1,\n      board: tuple1.board\n    });\n    var workspace = [].concat(tuple1.board);\n    var tuple2 = tuple1.guesses[tuple1.count];\n    workspace[tuple2.pos] = tuple2.num;\n    var guesses = deduce(workspace);\n\n    if (guesses === null) {\n      return {\n        state: remembered,\n        answer: workspace\n      };\n    }\n\n    remembered.push({\n      guesses: guesses,\n      count: 0,\n      board: workspace\n    });\n  }\n\n  return {\n    state: [],\n    answer: null\n  };\n}\n\nfunction deduce(board) {\n  while (true) {\n    var stuck = true;\n    var guess = null;\n    var count = 0; // fill in any spots determined by direct conflicts\n\n    var tuple1 = figurebits(board);\n    var allowed = tuple1.allowed;\n    var needed = tuple1.needed;\n\n    for (var pos = 0; pos < 81; pos++) {\n      if (board[pos] === null) {\n        var numbers = listbits(allowed[pos]);\n\n        if (numbers.length === 0) {\n          return [];\n        } else if (numbers.length === 1) {\n          board[pos] = numbers[0];\n          stuck = false;\n        } else if (stuck) {\n          var t = numbers.map(function (val, key) {\n            return {\n              pos: pos,\n              num: val\n            };\n          });\n          var tuple2 = pickbetter(guess, count, t);\n          guess = tuple2.guess;\n          count = tuple2.count;\n        }\n      }\n    }\n\n    if (!stuck) {\n      var tuple3 = figurebits(board);\n      allowed = tuple3.allowed;\n      needed = tuple3.needed;\n    } // fill in any spots determined by elimination of other locations\n\n\n    for (var axis = 0; axis < 3; axis++) {\n      for (var x = 0; x < 9; x++) {\n        var numbers = listbits(needed[axis * 9 + x]);\n\n        for (var i = 0; i < numbers.length; i++) {\n          var n = numbers[i];\n          var bit = 1 << n;\n          var spots = [];\n\n          for (var y = 0; y < 9; y++) {\n            var pos = posfor(x, y, axis);\n\n            if (allowed[pos] & bit) {\n              spots.push(pos);\n            }\n          }\n\n          if (spots.length === 0) {\n            return [];\n          } else if (spots.length === 1) {\n            board[spots[0]] = n;\n            stuck = false;\n          } else if (stuck) {\n            var t = spots.map(function (val, key) {\n              return {\n                pos: val,\n                num: n\n              };\n            });\n            var tuple4 = pickbetter(guess, count, t);\n            guess = tuple4.guess;\n            count = tuple4.count;\n          }\n        }\n      }\n    }\n\n    if (stuck) {\n      if (guess != null) {\n        shuffleArray(guess);\n      }\n\n      return guess;\n    }\n  }\n}\n\nfunction figurebits(board) {\n  var needed = [];\n  var allowed = board.map(function (val, key) {\n    return val === null ? 511 : 0;\n  }, []);\n\n  for (var axis = 0; axis < 3; axis++) {\n    for (var x = 0; x < 9; x++) {\n      var bits = axismissing(board, x, axis);\n      needed.push(bits);\n\n      for (var y = 0; y < 9; y++) {\n        var pos = posfor(x, y, axis);\n        allowed[pos] = allowed[pos] & bits;\n      }\n    }\n  }\n\n  return {\n    allowed: allowed,\n    needed: needed\n  };\n}\n\nfunction posfor(x, y, axis) {\n  if (axis === undefined) {\n    axis = 0;\n  }\n\n  if (axis === 0) {\n    return x * 9 + y;\n  } else if (axis === 1) {\n    return y * 9 + x;\n  }\n\n  return [0, 3, 6, 27, 30, 33, 54, 57, 60][x] + [0, 1, 2, 9, 10, 11, 18, 19, 20][y];\n}\n\nfunction axismissing(board, x, axis) {\n  var bits = 0;\n\n  for (var y = 0; y < 9; y++) {\n    var e = board[posfor(x, y, axis)];\n\n    if (e != null) {\n      bits |= 1 << e;\n    }\n  }\n\n  return 511 ^ bits;\n}\n\nfunction listbits(bits) {\n  var list = [];\n\n  for (var y = 0; y < 9; y++) {\n    if ((bits & 1 << y) != 0) {\n      list.push(y);\n    }\n  }\n\n  return list;\n}\n\nfunction pickbetter(b, c, t) {\n  if (b === null || t.length < b.length) {\n    return {\n      guess: t,\n      count: 1\n    };\n  } else if (t.length > b.length) {\n    return {\n      guess: b,\n      count: c\n    };\n  } else if (randomInt(c) === 0) {\n    return {\n      guess: t,\n      count: c + 1\n    };\n  }\n\n  return {\n    guess: b,\n    count: c + 1\n  };\n}\n\nfunction boardforentries(entries) {\n  var board = Array(81).fill(null);\n\n  for (var i = 0; i < entries.length; i++) {\n    var item = entries[i];\n    var pos = item.pos;\n    var num = item.num;\n    board[pos] = num;\n  }\n\n  return board;\n}\n\nfunction boardmatches(b1, b2) {\n  for (var i = 0; i < 81; i++) {\n    if (b1[i] != b2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction randomInt(max) {\n  return Math.floor(Math.random() * (max + 1));\n}\n\nfunction shuffleArray(original) {\n  // Swap each element with another randomly selected one.\n  for (var i = 0; i < original.length; i++) {\n    var j = i;\n\n    while (j === i) {\n      j = Math.floor(Math.random() * original.length);\n    }\n\n    var contents = original[i];\n    original[i] = original[j];\n    original[j] = contents;\n  }\n}\n\nfunction removeElement(array, from, to) {\n  var rest = array.slice((to || from) + 1 || array.length);\n  array.length = from < 0 ? array.length + from : from;\n  return array.push.apply(array, rest);\n}\n\nmodule.exports = {\n  makepuzzle: function () {\n    return makepuzzle(solvepuzzle(Array(81).fill(null)));\n  },\n  solvepuzzle: solvepuzzle,\n  ratepuzzle: ratepuzzle,\n  posfor: posfor\n};","map":{"version":3,"sources":["../dist-src/index.js"],"names":[],"mappings":"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","sourcesContent":["// Sudoku Generator and Solver for node.js\n// Copyright (c) 2011 Blagovest Dachev.  All rights reserved.\n//\n// This is a port of David Bau's python  implementation:\n// http://davidbau.com/archives/2006/09/04/sudoku_generator.html\nfunction makepuzzle(board) {\n  var puzzle = [];\n  var deduced = Array(81).fill(null);\n  var order = [...Array(81).keys()];\n  shuffleArray(order);\n\n  for (var i = 0; i < order.length; i++) {\n    var pos = order[i];\n\n    if (deduced[pos] === null) {\n      puzzle.push({\n        pos: pos,\n        num: board[pos]\n      });\n      deduced[pos] = board[pos];\n      deduce(deduced);\n    }\n  }\n\n  shuffleArray(puzzle);\n\n  for (var i = puzzle.length - 1; i >= 0; i--) {\n    var e = puzzle[i];\n    removeElement(puzzle, i);\n    var rating = checkpuzzle(boardforentries(puzzle), board);\n\n    if (rating === -1) {\n      puzzle.push(e);\n    }\n  }\n\n  return boardforentries(puzzle);\n}\n\nfunction ratepuzzle(puzzle, samples) {\n  var total = 0;\n\n  for (var i = 0; i < samples; i++) {\n    var tuple = solveboard(puzzle);\n\n    if (tuple.answer === null) {\n      return -1;\n    }\n\n    total += tuple.state.length;\n  }\n\n  return total / samples;\n}\n\nfunction checkpuzzle(puzzle, board) {\n  if (board === undefined) {\n    board = null;\n  }\n\n  var tuple1 = solveboard(puzzle);\n\n  if (tuple1.answer === null) {\n    return -1;\n  }\n\n  if (board != null && !boardmatches(board, tuple1.answer)) {\n    return -1;\n  }\n\n  var difficulty = tuple1.state.length;\n  var tuple2 = solvenext(tuple1.state);\n\n  if (tuple2.answer != null) {\n    return -1;\n  }\n\n  return difficulty;\n}\n\nfunction solvepuzzle(board) {\n  return solveboard(board).answer;\n}\n\nfunction solveboard(original) {\n  var board = [].concat(original);\n  var guesses = deduce(board);\n\n  if (guesses === null) {\n    return {\n      state: [],\n      answer: board\n    };\n  }\n\n  var track = [{\n    guesses: guesses,\n    count: 0,\n    board: board\n  }];\n  return solvenext(track);\n}\n\nfunction solvenext(remembered) {\n  while (remembered.length > 0) {\n    var tuple1 = remembered.pop();\n\n    if (tuple1.count >= tuple1.guesses.length) {\n      continue;\n    }\n\n    remembered.push({\n      guesses: tuple1.guesses,\n      count: tuple1.count + 1,\n      board: tuple1.board\n    });\n    var workspace = [].concat(tuple1.board);\n    var tuple2 = tuple1.guesses[tuple1.count];\n    workspace[tuple2.pos] = tuple2.num;\n    var guesses = deduce(workspace);\n\n    if (guesses === null) {\n      return {\n        state: remembered,\n        answer: workspace\n      };\n    }\n\n    remembered.push({\n      guesses: guesses,\n      count: 0,\n      board: workspace\n    });\n  }\n\n  return {\n    state: [],\n    answer: null\n  };\n}\n\nfunction deduce(board) {\n  while (true) {\n    var stuck = true;\n    var guess = null;\n    var count = 0; // fill in any spots determined by direct conflicts\n\n    var tuple1 = figurebits(board);\n    var allowed = tuple1.allowed;\n    var needed = tuple1.needed;\n\n    for (var pos = 0; pos < 81; pos++) {\n      if (board[pos] === null) {\n        var numbers = listbits(allowed[pos]);\n\n        if (numbers.length === 0) {\n          return [];\n        } else if (numbers.length === 1) {\n          board[pos] = numbers[0];\n          stuck = false;\n        } else if (stuck) {\n          var t = numbers.map(function (val, key) {\n            return {\n              pos: pos,\n              num: val\n            };\n          });\n          var tuple2 = pickbetter(guess, count, t);\n          guess = tuple2.guess;\n          count = tuple2.count;\n        }\n      }\n    }\n\n    if (!stuck) {\n      var tuple3 = figurebits(board);\n      allowed = tuple3.allowed;\n      needed = tuple3.needed;\n    } // fill in any spots determined by elimination of other locations\n\n\n    for (var axis = 0; axis < 3; axis++) {\n      for (var x = 0; x < 9; x++) {\n        var numbers = listbits(needed[axis * 9 + x]);\n\n        for (var i = 0; i < numbers.length; i++) {\n          var n = numbers[i];\n          var bit = 1 << n;\n          var spots = [];\n\n          for (var y = 0; y < 9; y++) {\n            var pos = posfor(x, y, axis);\n\n            if (allowed[pos] & bit) {\n              spots.push(pos);\n            }\n          }\n\n          if (spots.length === 0) {\n            return [];\n          } else if (spots.length === 1) {\n            board[spots[0]] = n;\n            stuck = false;\n          } else if (stuck) {\n            var t = spots.map(function (val, key) {\n              return {\n                pos: val,\n                num: n\n              };\n            });\n            var tuple4 = pickbetter(guess, count, t);\n            guess = tuple4.guess;\n            count = tuple4.count;\n          }\n        }\n      }\n    }\n\n    if (stuck) {\n      if (guess != null) {\n        shuffleArray(guess);\n      }\n\n      return guess;\n    }\n  }\n}\n\nfunction figurebits(board) {\n  var needed = [];\n  var allowed = board.map(function (val, key) {\n    return val === null ? 511 : 0;\n  }, []);\n\n  for (var axis = 0; axis < 3; axis++) {\n    for (var x = 0; x < 9; x++) {\n      var bits = axismissing(board, x, axis);\n      needed.push(bits);\n\n      for (var y = 0; y < 9; y++) {\n        var pos = posfor(x, y, axis);\n        allowed[pos] = allowed[pos] & bits;\n      }\n    }\n  }\n\n  return {\n    allowed: allowed,\n    needed: needed\n  };\n}\n\nfunction posfor(x, y, axis) {\n  if (axis === undefined) {\n    axis = 0;\n  }\n\n  if (axis === 0) {\n    return x * 9 + y;\n  } else if (axis === 1) {\n    return y * 9 + x;\n  }\n\n  return [0, 3, 6, 27, 30, 33, 54, 57, 60][x] + [0, 1, 2, 9, 10, 11, 18, 19, 20][y];\n}\n\nfunction axisfor(pos, axis) {\n  if (axis === 0) {\n    return Math.floor(pos / 9);\n  } else if (axis === 1) {\n    return pos % 9;\n  }\n\n  return Math.floor(pos / 27) * 3 + Math.floor(pos / 3) % 3;\n}\n\nfunction axismissing(board, x, axis) {\n  var bits = 0;\n\n  for (var y = 0; y < 9; y++) {\n    var e = board[posfor(x, y, axis)];\n\n    if (e != null) {\n      bits |= 1 << e;\n    }\n  }\n\n  return 511 ^ bits;\n}\n\nfunction listbits(bits) {\n  var list = [];\n\n  for (var y = 0; y < 9; y++) {\n    if ((bits & 1 << y) != 0) {\n      list.push(y);\n    }\n  }\n\n  return list;\n}\n\nfunction allowed(board, pos) {\n  var bits = 511;\n\n  for (var axis = 0; axis < 3; axis++) {\n    var x = axisfor(pos, axis);\n    bits = bits & axismissing(board, x, axis);\n  }\n\n  return bits;\n} // TODO: make sure callers utilize the return value correctly\n\n\nfunction pickbetter(b, c, t) {\n  if (b === null || t.length < b.length) {\n    return {\n      guess: t,\n      count: 1\n    };\n  } else if (t.length > b.length) {\n    return {\n      guess: b,\n      count: c\n    };\n  } else if (randomInt(c) === 0) {\n    return {\n      guess: t,\n      count: c + 1\n    };\n  }\n\n  return {\n    guess: b,\n    count: c + 1\n  };\n}\n\nfunction boardforentries(entries) {\n  var board = Array(81).fill(null);\n\n  for (var i = 0; i < entries.length; i++) {\n    var item = entries[i];\n    var pos = item.pos;\n    var num = item.num;\n    board[pos] = num;\n  }\n\n  return board;\n}\n\nfunction boardmatches(b1, b2) {\n  for (var i = 0; i < 81; i++) {\n    if (b1[i] != b2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction randomInt(max) {\n  return Math.floor(Math.random() * (max + 1));\n}\n\nfunction shuffleArray(original) {\n  // Swap each element with another randomly selected one.\n  for (var i = 0; i < original.length; i++) {\n    var j = i;\n\n    while (j === i) {\n      j = Math.floor(Math.random() * original.length);\n    }\n\n    var contents = original[i];\n    original[i] = original[j];\n    original[j] = contents;\n  }\n}\n\nfunction removeElement(array, from, to) {\n  var rest = array.slice((to || from) + 1 || array.length);\n  array.length = from < 0 ? array.length + from : from;\n  return array.push.apply(array, rest);\n}\n\n;\nmodule.exports = {\n  makepuzzle: function () {\n    return makepuzzle(solvepuzzle(Array(81).fill(null)));\n  },\n  solvepuzzle: solvepuzzle,\n  ratepuzzle: ratepuzzle,\n  posfor: posfor\n};"]},"metadata":{},"sourceType":"script"}