{"ast":null,"code":"var _jsxFileName = \"/Users/vemundtlund/Documents/Programmering/sudoku_solver/react/src/Square.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isValidInput = input => {\n  return input === \"\" || input.length === 1 && !isNaN(input);\n};\n\nconst Square = ({\n  squareValue,\n  rowIndex,\n  colIndex\n}) => {\n  _s();\n\n  const [value, setValue] = useState(0);\n  const [isEditable, setIsEditable] = useState(true);\n  const [row, setRow] = useState(rowIndex);\n  const [col, setCol] = useState(colIndex);\n  const style = {};\n\n  if (row > 0 && row % 3 === 0) {\n    style[\"borderTop\"] = \"2px solid black\";\n  }\n\n  if (col > 0 && col % 3 === 0) {\n    style[\"borderLeft\"] = \"2px solid black\";\n  }\n\n  const handleSquareValueChange = e => {\n    const newValue = e.target.value;\n\n    if (isValidInput(newValue)) {\n      setRow(rowIndex);\n      setCol(colIndex);\n      setValue(value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      style: style,\n      type: \"text\",\n      value: value,\n      isEditable: isEditable,\n      onChange: handleSquareValueChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Square, \"v5Tz25acW2dGryytY6kwMJmu/v4=\");\n\n_c = Square;\nexport default Square;\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/vemundtlund/Documents/Programmering/sudoku_solver/react/src/Square.js"],"names":["React","useState","isValidInput","input","length","isNaN","Square","squareValue","rowIndex","colIndex","value","setValue","isEditable","setIsEditable","row","setRow","col","setCol","style","handleSquareValueChange","e","newValue","target"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,SAAOA,KAAK,KAAK,EAAV,IAAiBA,KAAK,CAACC,MAAN,KAAiB,CAAjB,IAAsB,CAACC,KAAK,CAACF,KAAD,CAApD;AACD,CAFD;;AAIA,MAAMG,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA;AAAzB,CAAD,KAAyC;AAAA;;AACtD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAACO,QAAD,CAA9B;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAACQ,QAAD,CAA9B;AACA,QAAMS,KAAK,GAAG,EAAd;;AAEA,MAAIJ,GAAG,GAAG,CAAN,IAAWA,GAAG,GAAG,CAAN,KAAY,CAA3B,EAA8B;AAC5BI,IAAAA,KAAK,CAAC,WAAD,CAAL,GAAqB,iBAArB;AACD;;AACD,MAAIF,GAAG,GAAG,CAAN,IAAWA,GAAG,GAAG,CAAN,KAAY,CAA3B,EAA8B;AAC5BE,IAAAA,KAAK,CAAC,YAAD,CAAL,GAAsB,iBAAtB;AACD;;AAED,QAAMC,uBAAuB,GAAIC,CAAD,IAAO;AACrC,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASZ,KAA1B;;AACA,QAAIR,YAAY,CAACmB,QAAD,CAAhB,EAA4B;AAC1BN,MAAAA,MAAM,CAACP,QAAD,CAAN;AACAS,MAAAA,MAAM,CAACR,QAAD,CAAN;AACAE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,GAPD;;AAQA,sBACE;AAAA,2BACE;AACE,MAAA,KAAK,EAAEQ,KADT;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAER,KAHT;AAIE,MAAA,UAAU,EAAEE,UAJd;AAKE,MAAA,QAAQ,EAAEO;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjCD;;GAAMb,M;;KAAAA,M;AAmCN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nconst isValidInput = (input) => {\n  return input === \"\" || (input.length === 1 && !isNaN(input));\n};\n\nconst Square = ({ squareValue, rowIndex, colIndex }) => {\n  const [value, setValue] = useState(0);\n  const [isEditable, setIsEditable] = useState(true);\n  const [row, setRow] = useState(rowIndex);\n  const [col, setCol] = useState(colIndex);\n  const style = {};\n\n  if (row > 0 && row % 3 === 0) {\n    style[\"borderTop\"] = \"2px solid black\";\n  }\n  if (col > 0 && col % 3 === 0) {\n    style[\"borderLeft\"] = \"2px solid black\";\n  }\n\n  const handleSquareValueChange = (e) => {\n    const newValue = e.target.value;\n    if (isValidInput(newValue)) {\n      setRow(rowIndex);\n      setCol(colIndex);\n      setValue(value);\n    }\n  };\n  return (\n    <div>\n      <input\n        style={style}\n        type=\"text\"\n        value={value}\n        isEditable={isEditable}\n        onChange={handleSquareValueChange}\n      />\n    </div>\n  );\n};\n\nexport default Square;\n"]},"metadata":{},"sourceType":"module"}