{"ast":null,"code":"var _jsxFileName = \"/Users/vemundtlund/Documents/Programmering/sudoku_solver/react/src/Board.js\";\nimport React from \"react\";\nimport Square from \"./Square.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = props => {\n  const [boardState] = props;\n  const board = [];\n\n  const handleSquareValueChange = (i, j, newValue) => {\n    onSquareValueChange(i, j, newValue);\n  };\n\n  for (let i = 0; i < boardState.length; i++) {\n    let currentRow = [];\n\n    for (let j = 0; j < boardState[i].lenth; j++) {\n      let square = /*#__PURE__*/_jsxDEV(Square, {\n        value: boardState[i][j].cellValue,\n        editable: boardState[i][j].editable,\n        rowIndex: i,\n        colIndex: j,\n        onValueChange: handleSquareValueChange\n      }, \"\" + i + j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-board\",\n    children: grid\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/vemundtlund/Documents/Programmering/sudoku_solver/react/src/Board.js"],"names":["React","Square","useState","Board","props","boardState","board","handleSquareValueChange","i","j","newValue","onSquareValueChange","length","currentRow","lenth","square","cellValue","editable","grid"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM,CAACC,UAAD,IAAeD,KAArB;AACA,QAAME,KAAK,GAAG,EAAd;;AAEA,QAAMC,uBAAuB,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,QAAP,KAAoB;AAClDC,IAAAA,mBAAmB,CAACH,CAAD,EAAIC,CAAJ,EAAOC,QAAP,CAAnB;AACD,GAFD;;AAIA,OAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,UAAU,CAACO,MAA/B,EAAuCJ,CAAC,EAAxC,EAA4C;AAC1C,QAAIK,UAAU,GAAG,EAAjB;;AACA,SAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAAU,CAACG,CAAD,CAAV,CAAcM,KAAlC,EAAyCL,CAAC,EAA1C,EAA8C;AAC5C,UAAIM,MAAM,gBACR,QAAC,MAAD;AAEE,QAAA,KAAK,EAAEV,UAAU,CAACG,CAAD,CAAV,CAAcC,CAAd,EAAiBO,SAF1B;AAGE,QAAA,QAAQ,EAAEX,UAAU,CAACG,CAAD,CAAV,CAAcC,CAAd,EAAiBQ,QAH7B;AAIE,QAAA,QAAQ,EAAET,CAJZ;AAKE,QAAA,QAAQ,EAAEC,CALZ;AAME,QAAA,aAAa,EAAEF;AANjB,SACO,KAAKC,CAAL,GAASC,CADhB;AAAA;AAAA;AAAA;AAAA,cADF;AAUD;AACF;;AACD,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cAA6BS;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxBD;;KAAMf,K;AA0BN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport Square from \"./Square.js\";\nimport { useState } from \"react\";\n\nconst Board = (props) => {\n  const [boardState] = props;\n  const board = [];\n\n  const handleSquareValueChange = (i, j, newValue) => {\n    onSquareValueChange(i, j, newValue);\n  };\n\n  for (let i = 0; i < boardState.length; i++) {\n    let currentRow = [];\n    for (let j = 0; j < boardState[i].lenth; j++) {\n      let square = (\n        <Square\n          key={\"\" + i + j}\n          value={boardState[i][j].cellValue}\n          editable={boardState[i][j].editable}\n          rowIndex={i}\n          colIndex={j}\n          onValueChange={handleSquareValueChange}\n        />\n      );\n    }\n  }\n  return <div className=\"grid-board\">{grid}</div>;\n};\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}