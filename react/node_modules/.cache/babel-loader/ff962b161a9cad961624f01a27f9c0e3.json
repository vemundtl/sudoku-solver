{"ast":null,"code":"var _jsxFileName = \"/Users/vemundtlund/Documents/Programmering/sudoku_solver/react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Groceries from \"./List\";\nimport Alert from \"./Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem(\"groceries\");\n\n  if (list) {\n    return list = JSON.parse(localStorage.getItem(\"groceries\"));\n  } else {\n    return [];\n  }\n};\n\nfunction App() {\n  _s();\n\n  const [groceries, setGroceries] = useState([]);\n  const [groceryName, setGroceryName] = useState(\"\");\n  const [editId, setEditId] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const removeGrocery = id => {\n    let withoutRemovedGrocery = groceries.filter(grocery => grocery.id !== id);\n    setGroceries(withoutRemovedGrocery);\n  };\n\n  const editGrocery = id => {\n    const grocery = groceries.find(grocery => grocery.id === id);\n    setIsEditing(true);\n    setEditId(id);\n    setGroceryName(grocery.title);\n  };\n\n  const handlesubmit = e => {\n    e.preventDefault();\n\n    if (isEditing) {\n      setGroceries(groceries.map(item => {\n        if (item.id === editId) {\n          return { ...item,\n            title: groceryName\n          };\n        } else {\n          return item;\n        }\n      }));\n    } else {\n      const newItem = {\n        id: new Date().getTime().toString(),\n        title: groceryName\n      };\n      setGroceries([...groceries, newItem]);\n    }\n\n    setGroceryName(\"\");\n    setEditId(null);\n    setIsEditing(false);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"groceries\", JSON.stringify(groceries));\n  }, [groceries]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Grocery bud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-control\",\n        action: \"grocery-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"grocery\",\n          placeholder: \"e.g. eggs\",\n          value: groceryName,\n          onChange: e => setGroceryName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-btn\",\n          onClick: handlesubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grocery-container\",\n        children: [/*#__PURE__*/_jsxDEV(Groceries, {\n          groceries: groceries,\n          editGrocery: editGrocery,\n          removeGrocery: removeGrocery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-btn\",\n          onClick: () => {\n            setGroceries([]);\n          },\n          children: \"Clear items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nGZxiYf53lEx7JBcF5Ne07mpYQU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vemundtlund/Documents/Programmering/sudoku_solver/react/src/App.js"],"names":["React","useState","useEffect","Groceries","Alert","getLocalStorage","list","localStorage","getItem","JSON","parse","App","groceries","setGroceries","groceryName","setGroceryName","editId","setEditId","isEditing","setIsEditing","removeGrocery","id","withoutRemovedGrocery","filter","grocery","editGrocery","find","title","handlesubmit","e","preventDefault","map","item","newItem","Date","getTime","toString","setItem","stringify","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Groceries from \"./List\";\nimport Alert from \"./Alert\";\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem(\"groceries\");\n  if (list) {\n    return (list = JSON.parse(localStorage.getItem(\"groceries\")));\n  } else {\n    return [];\n  }\n};\n\nfunction App() {\n  const [groceries, setGroceries] = useState([]);\n  const [groceryName, setGroceryName] = useState(\"\");\n  const [editId, setEditId] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const removeGrocery = (id) => {\n    let withoutRemovedGrocery = groceries.filter(\n      (grocery) => grocery.id !== id\n    );\n    setGroceries(withoutRemovedGrocery);\n  };\n\n  const editGrocery = (id) => {\n    const grocery = groceries.find((grocery) => grocery.id === id);\n    setIsEditing(true);\n    setEditId(id);\n    setGroceryName(grocery.title);\n  };\n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    if (isEditing) {\n      setGroceries(\n        groceries.map((item) => {\n          if (item.id === editId) {\n            return { ...item, title: groceryName };\n          } else {\n            return item;\n          }\n        })\n      );\n    } else {\n      const newItem = {\n        id: new Date().getTime().toString(),\n        title: groceryName,\n      };\n      setGroceries([...groceries, newItem]);\n    }\n    setGroceryName(\"\");\n    setEditId(null);\n    setIsEditing(false);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"groceries\", JSON.stringify(groceries));\n  }, [groceries]);\n  return (\n    <section className=\"section-center\">\n      <div className=\"title\">\n        {<Alert />}\n        <h3>Grocery bud</h3>\n      </div>\n      <div>\n        <form className=\"form-control\" action=\"grocery-form\">\n          <input\n            type=\"text\"\n            className=\"grocery\"\n            placeholder=\"e.g. eggs\"\n            value={groceryName}\n            onChange={(e) => setGroceryName(e.target.value)}\n          />\n          <button className=\"submit-btn\" onClick={handlesubmit}>\n            Submit\n          </button>\n        </form>{\" \"}\n      </div>\n      <div>\n        {\n          <div className=\"grocery-container\">\n            <Groceries\n              groceries={groceries}\n              editGrocery={editGrocery}\n              removeGrocery={removeGrocery}\n            />\n            <button\n              className=\"clear-btn\"\n              onClick={() => {\n                setGroceries([]);\n              }}\n            >\n              Clear items\n            </button>\n          </div>\n        }\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}